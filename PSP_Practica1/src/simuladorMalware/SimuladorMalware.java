package simuladorMalware;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;

public class SimuladorMalware {

    final int bucle = 2; // Cambiamos cantidad de repeticiones del malware aqui


    /** Método que abre y cierra notepad, browser y explorador como un malware.
     * Se repite en funcion de this.bucle
     * @throws InterruptedException
     * @throws IOException
     * @throws Exception
     */
    public void runMalware() throws InterruptedException, IOException, Exception {

        for (int i = 0; i < bucle; i++) { // Bucle de 2o vueltas
            System.out.println("Malware abierto, repeticion: " + (i + 1));

            System.out.println("Abrimos notepad y browser");
            ProcessBuilder processBuilder = new ProcessBuilder("notepad").redirectErrorStream(true);
            Process notepad = processBuilder.start();

            // Descomentar para Chrome o IExplorer (no tengo Firefox para probar):
            processBuilder = new ProcessBuilder("C:\\Program Files\\Google\\Chrome\\Application\\chrome.exe", "google.com");
            //processBuilder = new ProcessBuilder("C:\\Program Files\\Internet Explorer\\iexplore.exe", "google.com");
            Process navegador = processBuilder.start();

            esperar(3000);

            System.out.println("Abrimos el explorador de archivos");
            Process explorer = Runtime.getRuntime().exec("explorer");

            //Comprobamos PIDs
            System.out.println("PID Notepad: " + notepad.pid() + "\nPID Browser: " + navegador.pid());


            System.out.println("Matamos los procesos notepad y browser");
            //matarProceso(notepad.pid());
            //matarProceso(navegador.pid());
            matarProceso("notepad.exe");
            matarProceso("chrome.exe");
            //matarProceso("iexplore.exe");


        } // fin bucle

        esperar(5000);

        apagar();

    }

    /** Metodo que hace esperar al thread actual
     * @param miliSegundos
     * @throws InterruptedException
     */
    public void esperar(int miliSegundos) throws InterruptedException {
        System.out.println("Esperando " + (miliSegundos / 1000) + " segundo(s)...");
        Thread.sleep(miliSegundos);
    }

    /**
     * Task killer por PID
     * @param id
     * @throws InterruptedException
     * @throws IOException
     */
    public void matarProceso(long id) throws InterruptedException, IOException {

        Process killer = new ProcessBuilder("taskkill", "/PID", String.valueOf(id), "/F").start();
        killer.waitFor();

        // No consigo ejecutar cmdlets como Stop-Process
        //Process killer = new ProcessBuilder("Stop-Process", "-Id", id, "-Force").start();

        try (BufferedReader err = new BufferedReader
                (new InputStreamReader(killer.getErrorStream(), StandardCharsets.UTF_8))) {
            String linea;
            while ((linea = err.readLine()) != null) {
                System.err.println("Task killer fallido: " + linea);
            }
        }
    }

    /**
     * Task killer por nombre del proceso
     * @param nombreProceso
     * @throws IOException
     */
    public void matarProceso(String nombreProceso) throws IOException {

        Process killer = new ProcessBuilder("taskkill", "/IM", nombreProceso, "/F").start();

        // No consigo ejecutar cmdlets como Stop-Process
        //Process killer = new ProcessBuilder("Stop-Process", "-Id", id, "-Force").start();

        try (BufferedReader err = new BufferedReader
                (new InputStreamReader(killer.getErrorStream(), StandardCharsets.UTF_8))) {
            String linea;
            while ((linea = err.readLine()) != null) {
                System.err.println("Task killer fallido: " + linea);
            }
        }
    }


    /**
     * Método que simula el apagado del ordenador
     */
    public void apagar() {

        System.out.println("Apagando ordenador...");

        /// ##AVISO: Mejor no correr esta parte del código, shutdown /a no funciona de manera fiable.

        // Apagamos en 60 segundos
        //Process shutdown = new ProcessBuilder("shutdown", "/s", "/t", "60", "/c", "\"Se apagará el equipo en 60 segundos\"").start();

        // Abortamos apagado
        //shutdown = new ProcessBuilder("shutdown", "/a").start();

        // En Powershell ISE habria sido más sencillo con el parametro -WhatIf pero no he conseguido ejecutar cmdlets.
    }
}
